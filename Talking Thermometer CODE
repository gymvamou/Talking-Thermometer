//Talking Thermometer - Gymnasio Vamou 2019 New Version
#include <dht.h>
#include <DHT.h>
#include <SPI.h>
#include <TMRpcm.h>
#include <SD.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27,20 ,4); // set the LCD address to 0x3F for a 16 chars and 2 line display
const int chipselect = 4;
#define SD_ChipSelectPin 4
#define DHT11_PIN 7
dht DHT;
TMRpcm tmrpcm;
int echoPin = 5; // Echo Pin
int trigPin = 6; // Trigger Pin
int maximumRange = 300; // Maximum range needed
int minimumRange = 0; // Minimum range needed
long duration, distance; // Duration used to calculate distance
         
void setup() 
{
  lcd.init(); // initialize the lcd
  lcd.backlight();
  lcd.setCursor(0,0);
  lcd.print("Talking  Thermometer");
  lcd.setCursor(0,1);
  lcd.print("   Gymnasio Vamou");
  tmrpcm.speakerPin = 9;  
  pinMode(9,OUTPUT);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  Serial.begin(9600);
  Serial.println("Talking Thermometer - Gymnasio Vamou");
  if(!SD.begin(SD_ChipSelectPin))
  {Serial.println("SD fail");
  return;}
}

void loop() {
    digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distance = duration/58.2; //Υπολογισμός απόστασης (σε cm) βασιζόμενοι στην ταχύτητα του ήχου.
  delay(50); //Καθυστέρηση 50ms πριν την επόμενη ανάγνωση

  int chk = DHT.read11(DHT11_PIN);
  Serial.print("  Distance: ");
  Serial.print(distance);
  Serial.println(" cm ");
  lcd.setCursor(0,0);
  lcd.print("Talking  Thermometer");
  lcd.setCursor(0,1);
  lcd.print("   Gymnasio Vamou");
  lcd.setCursor(0,2); 
  lcd.print("Temperature: ");
  lcd.print(DHT.temperature);
  lcd.print((char)223);
  lcd.print("C");
  lcd.setCursor(3,3);
  lcd.print("Humidity: ");
  lcd.print(DHT.humidity);
  lcd.print(" %");
  delay(600);
 
 if (distance < 40) {
  tmrpcm.speakerPin = (HIGH);
  if ((DHT.temperature) == 15) {
  tmrpcm.setVolume(5);
  tmrpcm.play("15.wav");
  lcd.setCursor(0,1);
  lcd.print("  Hello It's Cool     ");
  }
  if ((DHT.temperature) == 16) {
  tmrpcm.setVolume(5);
  tmrpcm.play("16.wav");
  lcd.setCursor(0,1);
  lcd.print("  Hello It's Cool     ");
  }
  if ((DHT.temperature) == 17) {
    tmrpcm.setVolume(5);
  tmrpcm.play("17.wav");
  lcd.setCursor(0,1);
  lcd.print("  Hello It's Cool     ");
  }
  if ((DHT.temperature) == 18) {
    tmrpcm.setVolume(5);
  tmrpcm.play("18.wav");
  lcd.setCursor(0,1);
  lcd.print("  Hello It's Cool    ");
  }
  if ((DHT.temperature) == 19) {
    tmrpcm.setVolume(5);
  tmrpcm.play("19.wav");
  lcd.setCursor(0,1);
  lcd.print("  Hello It's Nice    ");
  }
  if ((DHT.temperature) == 20) {
    tmrpcm.setVolume(5);
  tmrpcm.play("20.wav");
  lcd.setCursor(0,1);
  lcd.print("  Hello It's Nice    ");
  }
  if ((DHT.temperature) == 21) {
    tmrpcm.setVolume(5);
  tmrpcm.play("21.wav");
  lcd.setCursor(0,1);
  lcd.print("  Hello It's Nice    ");
  }
  if ((DHT.temperature) == 22) {
    tmrpcm.setVolume(5);
  tmrpcm.play("22.wav");
  lcd.setCursor(0,1);
  lcd.print("  Hello It's Nice    ");
  }
  if ((DHT.temperature) == 23) {
    tmrpcm.setVolume(5);
  tmrpcm.play("23.wav");
  lcd.setCursor(0,1);
  lcd.print("  Hello It's Nice    ");
  }
  if ((DHT.temperature) == 24) {
    tmrpcm.setVolume(5);
  tmrpcm.play("24.wav");
  lcd.setCursor(0,1);
  lcd.print("  Hello It's Nice    ");
  }
  if ((DHT.temperature) == 25) {
    tmrpcm.setVolume(5);
  tmrpcm.play("25.wav");
  lcd.setCursor(0,1);
  lcd.print(" Hello It's Warm! ");
 }
  if ((DHT.temperature) == 26) {
    tmrpcm.setVolume(5);
  tmrpcm.play("26.wav");
  lcd.setCursor(0,1);
  lcd.print(" Hello It's Warm! ");
  }
  if ((DHT.temperature) == 27) {
    tmrpcm.setVolume(5);
  tmrpcm.play("27.wav");
  lcd.setCursor(0,1);
  lcd.print(" Hello It's Warm! ");
  }
  if ((DHT.temperature) == 28) {
    tmrpcm.setVolume(5);
  tmrpcm.play("28.wav");
  lcd.setCursor(0,1);
  lcd.print(" Hello It's Warm! ");
 }
  if ((DHT.temperature) == 29) {
    tmrpcm.setVolume(5);
  tmrpcm.play("29.wav");
  lcd.setCursor(0,1);
  lcd.print(" Hello It's Warm! ");
  }
  if ((DHT.temperature) == 30) {
    tmrpcm.setVolume(5);
  tmrpcm.play("30.wav");
  lcd.setCursor(0,1);
  lcd.print("  Hello Very Hot!     ");
  }
  if ((DHT.temperature) == 31) {
    tmrpcm.setVolume(5);
tmrpcm.play("31.wav");
lcd.setCursor(0,1);
  lcd.print("  Hello Very Hot!     ");
  }
  if ((DHT.temperature) == 32) {
    tmrpcm.setVolume(5);
tmrpcm.play("32.wav");
lcd.setCursor(0,1);
  lcd.print("  Hello Very Hot!     ");
  }
  if ((DHT.temperature) == 33) {
    tmrpcm.setVolume(5);
tmrpcm.play("33.wav");
lcd.setCursor(0,1);
  lcd.print("  Hello Very Hot!     ");
  }
  if ((DHT.temperature) == 34) {
    tmrpcm.setVolume(5);
tmrpcm.play("34.wav");
lcd.setCursor(0,1);
  lcd.print("  Hello Very Hot!     ");
  }
  if ((DHT.temperature) == 35) {
    tmrpcm.setVolume(5);
tmrpcm.play("35.wav");
lcd.setCursor(0,1);
  lcd.print("  Hello Very Hot!     ");
  }
  if ((DHT.temperature) == 36) {
    tmrpcm.setVolume(5);
tmrpcm.play("36.wav");
lcd.setCursor(0,1);
  lcd.print("  Hello Very Hot!     ");
  }
  delay(3000);
  tmrpcm.stopPlayback();
 }
 if (distance > 40) {
tmrpcm.speakerPin = (LOW);}
}
